spring:
  application:
    name: clinic-management-reactive-api

  # R2DBC Configuration
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/clinica_db
    username: postgres
    password: postgres
    pool:
      initial-size: 10
      max-size: 20
      max-idle-time: 30m
      validation-query: SELECT 1

  # Flyway Configuration
  flyway:
    url: jdbc:postgresql://localhost:5432/clinica_db
    user: postgres
    password: postgres
    baseline-on-migrate: true
    locations: classpath:db/migration

  # Cache Configuration
  cache:
    type: redis # Mudar o tipo de cache para Redis

  # Redis Configuration
  data:
    redis:
      host: localhost
      port: 6379
      # Configuração do tempo de vida (TTL) do cache
      cache:
        time-to-live: 10m # Duração padrão de 10 minutos

  # Profiles
  profiles:
    active: dev

# Server Configuration
server:
  port: 8080

# Logging
logging:
  level:
    com.clinica: DEBUG
    org.springframework.data.r2dbc: DEBUG
    org.springframework.r2dbc: DEBUG
    org.springframework.data.redis: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

---
# Profile: docker
spring:
  config:
    activate:
      on-profile: docker
  r2dbc:
    url: r2dbc:postgresql://postgres:5432/clinica_db
  flyway:
    url: jdbc:postgresql://postgres:5432/clinica_db
  data:
    redis:
      host: redis # Usar o nome do serviço Docker

---
# Profile: test
spring:
  config:
    activate:
      on-profile: test
  r2dbc:
    url: r2dbc:postgresql://localhost:5433/clinica_test_db
